.       - Any Character Except New Line
\d      - Digit (0-9)
\D      - Not a Digit (0-9)
\w      - Word Character (a-z, A-Z, 0-9, _)
\W      - Not a Word Character
\s      - Whitespace (space, tab, newline)
\S      - Not Whitespace (space, tab, newline)

\b      - Word Boundary
\B      - Not a Word Boundary
^       - Beginning of a String
$       - End of a String

[]      - Matches Characters in brackets
[^ ]    - Matches Characters NOT in brackets
|       - Either Or
( )     - Group

Quantifiers:
*       - 0 or More
+       - 1 or More
?       - 0 or One
{3}     - Exact Number
{3,4}   - Range of Numbers (Minimum, Maximum)


/yourRegexHere/flags

Flags:
;————————————————————————————

g — global
Matches the whole string, without it, only matches the first occurence

i — case insensitive

m — multiline


Inside of the expression:
;————————————————————————————

+ Match at least one or more
without it, two of the same characters will be caught separately. with it, they are caught together

? Optional
if there is this character, also grab it

* A combination of + and ?
Optionally match as many as you can together

. Literally anything except a newline

\ escape character

\w Match any word character

\s Match any whitespace

Both of them when capital are essentially \!s

{digit} Catch anything that's this digit long
{digit,} This digit or more long
{digit,digit2} From digit to digit2 long

[char1char2char3]regex Match only but any chars from []

[a-z] from this character to this character
[A-Z]
[0-9]

() Group of regexes

| or

(t|T)he => the, The
t|The => t, The

(){} match d->d of ch|ch|ch

^ The beginning of the line && text

^ is the beginning of any line if you have the multiline flag

$ The ending of the line
(is after, M flag applies the same as ^)

(?<=regex1)regex2 Regex2 that is preceded by regex1 

replace = with ! for opposite effect —
everything that *isn't* preceded by regex1

regex2(?=regex1) Followed by

\d digit

?<groupName>

?: don't capture group