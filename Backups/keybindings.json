// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+f8",
        "command": "-ahk++.runSelection",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "ctrl+f1",
        "command": "-ahk++.openHelp"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+delete",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+home",
        "command": "deleteAllLeft"
    },
    {
        "key": "alt+end",
        "command": "deleteAllRight"
    },
    {
        "key": "ctrl+insert",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-l13Duplicate.action.duplicate.before",
        "when": "editorTextFocus && !editorReadonly"
    },
   {
        "key": "ctrl+shift+alt+d",
        "command": "-l13Duplicate.action.duplicate.after",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "f9",
        "command": "-ahk++.debug",
        "when": "editorLangId == 'ahk'"
    },
   {
        "key": "ctrl+f9",
        "command": "-ahk++.run",
        "when": "editorLangId == 'ahk'"
    },
    {
        "key": "a",
        "command": "-notebook.cell.insertCodeCellAboveAndFocusContainer",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "alt+f9",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "ctrl+alt+down",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "ctrl+alt+up",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f9",
        "command": "-editor.debug.action.toggleBreakpoint",
        "when": "debuggersAvailable && editorTextFocus"
    },
   {
        "key": "f6",
        "command": "-workbench.action.debug.pause",
        "when": "debugState == 'running'"
    },
    {
        "key": "shift+f9",
        "command": "-settings.action.showContextMenu",
        "when": "inSettingsEditor"
    },
    {
        "key": "shift+alt+h",
        "command": "python.execInTerminal",
        "when": "editorLangId == 'python'"
    },
   {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "alt+1",
      "command": "workbench.view.explorer",
      "when": "editorFocus"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "alt+3",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "alt+4",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "alt+5",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+alt+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+shift+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "ctrl+alt+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
   {
        "key": "ctrl+f4",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
    },
   {
        "key": "shift+insert",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "shift+insert",
        "command": "pasteAndIndent.action"
    },
   {
        "key": "shift+alt+[",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "ctrl+alt+[",
        "command": "explorer.newFolder"
    },
    {
        "key": "shift+f9",
        "command": "-editor.debug.action.toggleInlineBreakpoint",
        "when": "editorTextFocus"
    },
   {
        "key": "ctrl+f5",
        "command": "-workbench.action.debug.run",
        "when": "debuggersAvailable && debugState != 'initializing'"
    },
    {
        "key": "shift+f8",
        "command": "-editor.action.marker.prevInFiles",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "-workbench.action.showAllEditors"
    },
   {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.disconnect",
        "when": "focusedSessionIsAttach && inDebugMode"
    },
    {
        "key": "ctrl+f9",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+f5",
        "command": "-workbench.action.debug.stop",
        "when": "inDebugMode && !focusedSessionIsAttach"
    },
    {
        "key": "shift+down",
        "command": "better-line-select.downward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "-better-line-select.downward",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+up",
        "command": "better-line-select.upward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-better-line-select.upward",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+left",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
   {
        "key": "ctrl+alt+k",
      "command": "copyRelativeFilePath"
    },
    {
        "key": "ctrl+k ctrl+shift+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.action.nextMatchFindAction",
        "when": "replaceActive || findWidgetVisible"
    },
    {
        "key": "enter",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.previousMatchFindAction",
        "when": "replaceActive || findWidgetVisible"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
   {
        "key": "shift+enter",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.extensioneditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.extensioneditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.webvieweditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.webvieweditor.findPrevious",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "shift+alt+up",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
    },
    {
        "key": "enter",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
    },
   {
        "key": "enter",
        "command": "-editor.action.extensioneditor.findNext",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
    },
   {
        "key": "enter",
        "command": "-editor.action.webvieweditor.findNext",
        "when": "webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "ctrl+\\",
        "command": "-workbench.action.splitEditor"
   },
   {
      "key": "ctrl+shift+f9",
      "command": "-ahk++.compile",
      "when": "editorLangId == 'ahk'"
   },
   {
      "key": "f10",
      "command": "-extension.node-debug.startWithStopOnEntry",
      "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
   },
   {
      "key": "f11",
      "command": "-extension.node-debug.startWithStopOnEntry",
      "when": "!inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
   },
   {
      "key": "f5",
      "command": "-workbench.action.debug.start",
      "when": "debuggersAvailable && debugState == 'inactive'"
   },
   {
      "key": "space",
      "command": "editor.action.cancelSelectionAnchor",
      "when": "editorTextFocus && selectionAnchorSet"
   },
   {
      "key": "space",
      "command": "workbench.action.hideInterfaceOverview",
      "when": "interfaceOverviewVisible"
   },
   {
      "key": "escape",
      "command": "-workbench.action.hideInterfaceOverview",
      "when": "interfaceOverviewVisible"
   },
   {
      "key": "shift+alt+e",
      "command": "revealFileInOS"
   },
   {
      "key": "shift+alt+r",
      "command": "-revealFileInOS",
      "when": "!editorFocus"
   },
   {
      "key": "win+end",
      "command": "editor.action.commentLine",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+t",
      "command": "-workbench.action.showAllSymbols"
   },
   {
      "key": "ctrl+shift+\\",
      "command": "-editor.action.jumpToBracket",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+left",
      "command": "-workbench.action.navigateBack"
   },
   {
      "key": "alt+pageup",
      "command": "workbench.action.navigateBack"
   },
   {
      "key": "alt+pagedown",
      "command": "workbench.action.navigateForward"
   },
   {
      "key": "alt+right",
      "command": "-workbench.action.navigateForward"
   },
   {
      "key": "ctrl+u",
      "command": "-cursorUndo",
      "when": "textInputFocus"
   },
   {
      "key": "alt+pageup",
      "command": "-scrollPageUp",
      "when": "textInputFocus"
   },
   {
      "key": "alt+pagedown",
      "command": "-scrollPageDown",
      "when": "textInputFocus"
   },
   {
      "key": "ctrl+z",
      "command": "-undo"
   },
   {
      "key": "ctrl+shift+z",
      "command": "-redo"
   },
   {
      "key": "z",
      "command": "-undo",
      "when": "notebookEditorFocused && !inputFocus"
   },
   {
      "key": "shift+alt+left",
      "command": "-editor.action.smartSelect.shrink",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+alt+right",
      "command": "-editor.action.smartSelect.expand",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+z",
      "command": "default:undo"
   },
   {
      "key": "shift+alt+left",
      "command": "default:undo"
   },
   {
      "key": "ctrl+y",
      "command": "-redo"
   },
   {
      "key": "ctrl+y",
      "command": "default:redo"
   },
   {
      "key": "shift+alt+right",
      "command": "default:redo"
   },
   {
      "key": "f1",
      "command": "-workbench.action.showCommands"
   },
   {
      "key": "f3",
      "command": "-editor.action.nextMatchFindAction",
      "when": "editorFocus"
   },
   {
      "key": "f3",
      "command": "-workbench.action.terminal.findNext",
      "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
   },
   {
      "key": "f4",
      "command": "-references-view.next",
      "when": "reference-list.hasResult && references-view.canNavigate"
   },
   {
      "key": "f4",
      "command": "-search.action.focusNextSearchResult",
      "when": "hasSearchResult || inSearchEditor"
   },
   {
      "key": "f4",
      "command": "-goToNextReference",
      "when": "inReferenceSearchEditor || referenceSearchVisible"
   },
   {
      "key": "f5",
      "command": "-workbench.action.debug.continue",
      "when": "debugState == 'stopped'"
   },
   {
      "key": "f5",
      "command": "-debug.openView",
      "when": "!debuggersAvailable"
   },
   {
      "key": "f6",
      "command": "-workbench.action.focusNextPart"
   },
   {
      "key": "f7",
      "command": "-editor.action.diffReview.next",
      "when": "isInDiffEditor"
   },
   {
      "key": "f7",
      "command": "-editor.action.wordHighlight.next",
      "when": "editorTextFocus && hasWordHighlights"
   },
   {
      "key": "f8",
      "command": "-editor.action.marker.nextInFiles",
      "when": "editorFocus"
   },
   {
      "key": "shift+f7",
      "command": "-editor.action.diffReview.prev",
      "when": "isInDiffEditor"
   },
   {
      "key": "shift+f7",
      "command": "-editor.action.wordHighlight.prev",
      "when": "editorTextFocus && hasWordHighlights"
   },
   {
      "key": "shift+f6",
      "command": "-workbench.action.focusPreviousPart"
   },
   {
      "key": "shift+f4",
      "command": "-references-view.prev",
      "when": "reference-list.hasResult && references-view.canNavigate"
   },
   {
      "key": "shift+f4",
      "command": "-search.action.focusPreviousSearchResult",
      "when": "hasSearchResult || inSearchEditor"
   },
   {
      "key": "shift+f4",
      "command": "-goToPreviousReference",
      "when": "inReferenceSearchEditor || referenceSearchVisible"
   },
   {
      "key": "shift+f3",
      "command": "-editor.action.previousMatchFindAction",
      "when": "editorFocus"
   },
   {
      "key": "shift+f3",
      "command": "-workbench.action.terminal.findPrevious",
      "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
   },
   {
      "key": "f1",
      "command": "workbench.action.openEditorAtIndex1"
   },
   {
      "key": "alt+1",
      "command": "-workbench.action.openEditorAtIndex1"
   },
   {
      "key": "f2",
      "command": "workbench.action.openEditorAtIndex2"
   },
   {
      "key": "alt+2",
      "command": "-workbench.action.openEditorAtIndex2"
   },
   {
      "key": "f3",
      "command": "workbench.action.openEditorAtIndex3"
   },
   {
      "key": "alt+3",
      "command": "-workbench.action.openEditorAtIndex3"
   },
   {
      "key": "f4",
      "command": "workbench.action.openEditorAtIndex4"
   },
   {
      "key": "alt+4",
      "command": "-workbench.action.openEditorAtIndex4"
   },
   {
      "key": "alt+5",
      "command": "-workbench.action.openEditorAtIndex5"
   },
   {
      "key": "alt+6",
      "command": "-workbench.action.openEditorAtIndex6"
   },
   {
      "key": "alt+7",
      "command": "-workbench.action.openEditorAtIndex7"
   },
   {
      "key": "alt+8",
      "command": "-workbench.action.openEditorAtIndex8"
   },
   {
      "key": "alt+9",
      "command": "-workbench.action.openEditorAtIndex9"
   },
   {
      "key": "ctrl+1",
      "command": "-workbench.action.focusFirstEditorGroup"
   },
   {
      "key": "ctrl+2",
      "command": "-workbench.action.focusSecondEditorGroup"
   },
   {
      "key": "ctrl+3",
      "command": "-workbench.action.focusThirdEditorGroup"
   },
   {
      "key": "ctrl+4",
      "command": "-workbench.action.focusFourthEditorGroup"
   },
   {
      "key": "f2",
      "command": "-editor.action.rename",
      "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "f2",
      "command": "-debug.renameWatchExpression",
      "when": "watchExpressionsFocused"
   },
   {
      "key": "ctrl+j ctrl+f6",
      "command": "debug.setVariable",
      "when": "variablesFocused"
   },
   {
      "key": "f2",
      "command": "-debug.setVariable",
      "when": "variablesFocused"
   },
   {
      "key": "ctrl+j ctrl+f6",
      "command": "remote.tunnel.label",
      "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
   },
   {
      "key": "f2",
      "command": "-remote.tunnel.label",
      "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
   },
   {
      "key": "shift+alt+r",
      "command": "renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "f2",
      "command": "-renameFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "f2",
      "command": "-workbench.action.terminal.renameInstance",
      "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
   },
   {
      "key": "alt+2",
      "command": "workbench.action.togglePanel"
   },
   {
      "key": "ctrl+j",
      "command": "-workbench.action.togglePanel"
   },
   {
      "key": "shift+alt+]",
      "command": "workbench.action.openGlobalKeybindings"
   },
   {
      "key": "shift+delete",
      "command": "-editor.action.clipboardCutAction"
   },
   {
      "key": "shift+delete",
      "command": "-deleteFile",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "alt+delete",
      "command": "-notebook.cell.clearOutputs",
      "when": "notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
   },
   {
      "key": "ctrl+shift+f",
      "command": "workbench.view.search.focus"
   },
   {
      "key": "alt+2",
      "command": "terminal.focus",
      "when": "!terminalFocus"
   },
   {
      "key": "ctrl+backspace",
      "command": "-workbench.action.terminal.sendSequence",
      "when": "terminalFocus"
   },
   {
      "key": "ctrl+backspace",
      "command": "-workbench.action.terminal.sendSequence",
      "when": "terminalFocus && terminalShellType == 'cmd'"
   },
   {
      "key": "ctrl+shift+.",
      "command": "-breadcrumbs.focusAndSelect",
      "when": "breadcrumbsPossible"
   },
   {
      "key": "ctrl+shift+p",
      "command": "workbench.action.gotoLine"
   },
   {
      "key": "ctrl+g",
      "command": "-workbench.action.gotoLine"
   },
   {
      "key": "ctrl+shift+]",
      "command": "workbench.action.openSettings"
   },
   {
      "key": "ctrl+,",
      "command": "-workbench.action.openSettings"
   },
   {
      "key": "shift+alt+p",
      "command": "workbench.action.showCommands"
   },
   {
      "key": "ctrl+shift+p",
      "command": "-workbench.action.showCommands"
   },
   {
      "key": "shift+alt+i",
      "command": "editor.action.insertSnippet"
   },
   {
      "key": "ctrl+shift+i",
      "command": "workbench.action.openSnippets"
   },
   {
      "key": "ctrl+alt+p",
      "command": "workbench.action.gotoSymbol"
   },
   {
      "key": "ctrl+shift+o",
      "command": "-workbench.action.gotoSymbol"
   },
   {
      "key": "shift+alt+o",
      "command": "-editor.action.organizeImports",
      "when": "editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
   },
   {
      "key": "ctrl+shift+b",
      "command": "-workbench.action.tasks.build"
   },
   {
      "key": "ctrl+shift+o",
      "command": "workbench.action.tasks.configureTaskRunner"
   },
   {
      "key": "ctrl+shift+i",
      "command": "-workbench.action.toggleDevTools",
      "when": "isDevelopment"
   },
   {
      "key": "ctrl+shift+]",
      "command": "-notebook.unfold",
      "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
   },
   {
      "key": "ctrl+shift+]",
      "command": "-editor.unfold",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "shift+alt+j",
      "command": "editor.action.changeAll",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+f2",
      "command": "-editor.action.changeAll",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "shift+alt+f",
      "command": "-editor.action.formatDocument",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
   },
   {
      "key": "shift+alt+f",
      "command": "-editor.action.formatDocument.none",
      "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
   },
   {
      "key": "ctrl+k ctrl+f",
      "command": "-editor.action.formatSelection",
      "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "shift+alt+f",
      "command": "-notebook.format",
      "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
   },
   {
      "key": "shift+alt+f",
      "command": "-notebook.formatCell",
      "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
   },
   {
      "key": "ctrl+k ctrl+shift+s",
      "command": "-workbench.action.files.saveWithoutFormatting"
   },
   {
      "key": "ctrl+shift+l",
      "command": "-addCursorsAtSearchResults",
      "when": "fileMatchOrMatchFocus && searchViewletVisible"
   },
   {
      "key": "v",
      "command": "-notebook.cell.paste",
      "when": "notebookEditorFocused && !inputFocus"
   },
   {
      "key": "ctrl+v",
      "command": "-editor.action.clipboardPasteAction"
   },
   {
      "key": "shift+f12",
      "command": "-editor.action.goToReferences",
      "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
   },
   {
      "key": "shift+alt+d",
      "command": "references-view.findReferences",
      "when": "editorHasReferenceProvider"
   },
   {
      "key": "shift+alt+f12",
      "command": "-references-view.findReferences",
      "when": "editorHasReferenceProvider"
   },
   {
      "key": "f12",
      "command": "-editor.action.revealDefinition",
      "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
   },
   {
      "key": "ctrl+f5",
      "command": "-debug.openView",
      "when": "!debuggersAvailable"
   },
   {
      "key": "ctrl+alt+]",
      "command": "workbench.action.customizeLayout"
   },
   {
      "key": "ctrl+alt+]",
      "command": "-jupyter.gotoNextCellInFile",
      "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
   },
   {
      "key": "shift+alt+2",
      "command": "workbench.action.terminal.kill",
      "when": "terminalHasBeenCreated"
   },
   {
      "key": "ctrl+5",
      "command": "-workbench.action.focusFifthEditorGroup"
   },
   {
      "key": "ctrl+6",
      "command": "-workbench.action.focusSixthEditorGroup"
   },
   {
      "key": "ctrl+7",
      "command": "-workbench.action.focusSeventhEditorGroup"
   },
   {
      "key": "ctrl+8",
      "command": "-workbench.action.focusEighthEditorGroup"
   },
   {
      "key": "ctrl+enter",
      "command": "-editor.action.insertLineAfter",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "shift+enter",
      "command": "editor.action.insertLineBefore",
      "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
   },
   {
      "key": "ctrl+shift+enter",
      "command": "-editor.action.insertLineBefore",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+k ctrl+u",
      "command": "-editor.action.removeCommentLine",
      "when": "editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+k ctrl+/",
      "command": "-editor.foldAllBlockComments",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "shift+enter",
      "command": "-jupyter.runcurrentcelladvance",
      "when": "editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused"
   },
   {
      "key": "shift+enter",
      "command": "-jupyter.execSelectionInteractive",
      "when": "editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
   },
   {
      "key": "shift+enter",
      "command": "-notebook.cell.executeAndSelectBelow",
      "when": "notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
   },
   {
      "key": "shift+enter",
      "command": "-notebook.cell.executeAndSelectBelow",
      "when": "notebookCellListFocused && notebookCellType == 'code' || editorTextFocus && inputFocus && notebookEditorFocused"
   },
   {
      "key": "shift+enter",
      "command": "-python.execSelectionInTerminal",
      "when": "editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
   },
   {
      "key": "ctrl+; ctrl+;",
      "command": "keybindings.editor.searchKeybindings",
      "when": "inKeybindings && !inKeybindingsSearch"
   },
   {
      "key": "ctrl+f",
      "command": "-keybindings.editor.searchKeybindings",
      "when": "inKeybindings"
   },
   {
      "key": "ctrl+; ctrl+k",
      "command": "keybindings.editor.defineWhenExpression",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "ctrl+k ctrl+e",
      "command": "-keybindings.editor.defineWhenExpression",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "ctrl+k ctrl+r",
      "command": "-workbench.action.keybindingsReference"
   },
   {
      "key": "ctrl+; ctrl+j",
      "command": "keybindings.editor.addKeybinding",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "ctrl+k ctrl+a",
      "command": "-keybindings.editor.addKeybinding",
      "when": "inKeybindings && keybindingFocus"
   },
   {
      "key": "alt+p",
      "command": "-keybindings.editor.toggleSortByPrecedence",
      "when": "inKeybindings"
   },
   {
      "key": "enter",
      "command": "-notebook.cell.edit",
      "when": "notebookCellListFocused && notebookEditable && !inputFocus"
   },
   {
      "key": "enter",
      "command": "-repl.action.acceptInput",
      "when": "inDebugRepl && textInputFocus"
   },
   {
      "key": "ctrl+shift+c",
      "command": "-workbench.action.terminal.openNativeConsole",
      "when": "!terminalFocus"
   },
   {
      "key": "shift+alt+o",
      "command": "workbench.action.tasks.runTask"
   },
   {
      "key": "f5",
      "command": "workbench.action.openEditorAtIndex5"
   },
   {
      "key": "f6",
      "command": "workbench.action.openEditorAtIndex6"
   },
   {
      "key": "f7",
      "command": "workbench.action.openEditorAtIndex7"
   },
   {
      "key": "f8",
      "command": "workbench.action.openEditorAtIndex8"
   },
   {
      "key": "alt+1",
      "command": "workbench.action.focusActiveEditorGroup",
      "when": "!editorFocus"
   },
   {
      "key": "shift+alt+u",
      "command": "git.commitAll"
   },
   {
      "key": "shift+enter",
      "command": "-acceptAlternativeSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+shift+k",
      "command": "copyFilePath"
   },
   {
      "key": "shift+alt+c",
      "command": "-copyFilePath",
      "when": "!editorFocus"
   },
   {
      "key": "ctrl+shift+c",
      "command": "-workbench.action.terminal.copySelection",
      "when": "terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
   },
   {
      "key": "ctrl+shift+l",
      "command": "-selectAllSearchEditorMatches",
      "when": "inSearchEditor"
   },
   {
      "key": "ctrl+shift+l",
      "command": "-editor.action.selectHighlights",
      "when": "editorFocus"
   },
   {
      "key": "shift+alt+c",
      "command": "-search.action.copyPath",
      "when": "fileMatchOrFolderMatchWithResourceFocus"
   },
   {
      "key": "ctrl+alt+[",
      "command": "-jupyter.gotoPrevCellInFile",
      "when": "editorTextFocus && jupyter.hascodecells && !notebookEditorFocused"
   },
   {
      "key": "ctrl+alt+j",
      "command": "editor.action.rename"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-rerunSearchEditorSearch",
      "when": "inSearchEditor"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-workbench.action.quickOpenNavigatePreviousInRecentFilesPicker",
      "when": "inQuickOpen && inRecentFilesPicker"
   },
   {
      "key": "ctrl+k p",
      "command": "-workbench.action.files.copyPathOfActiveFile"
   },
   {
      "key": "ctrl+r",
      "command": "-workbench.action.reloadWindow",
      "when": "isDevelopment"
   },
   {
      "key": "ctrl+r",
      "command": "-workbench.action.openRecent"
   },
   {
      "key": "ctrl+r",
      "command": "-jupyter.refreshDataViewer",
      "when": "isWorkspaceTrusted && jupyter.dataViewerActive"
   },
   {
      "key": "ctrl+r",
      "command": "-python.refreshTensorBoard",
      "when": "python.hasActiveTensorBoardSession"
   },
   {
      "key": "ctrl+r",
      "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
      "when": "inQuickOpen && inRecentFilesPicker"
   },
   {
      "key": "ctrl+d",
      "command": "-editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
   },
   {
      "key": "f9",
      "command": "workbench.action.debug.continue",
      "when": "inDebugMode"
   },
   {
      "key": "ctrl+enter",
      "command": "editor.emmet.action.expandAbbreviation",
      "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
   },
   {
      "key": "ctrl+enter",
      "command": "-acceptSelectedSuggestion",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+enter",
      "command": "editor.action.inlineSuggest.commit",
      "when": "inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
   },
   {
      "key": "ctrl+enter",
      "command": "insertBestCompletion",
      "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
   },
   {
      "key": "ctrl+enter",
      "command": "insertNextSuggestion",
      "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
   },
   {
      "key": "ctrl+enter",
      "command": "insertSnippet",
      "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
   },
   {
      "key": "shift+f9",
      "command": "workbench.action.debug.pause",
      "when": "inDebugMode"
   },
   {
      "key": "ctrl+enter",
      "command": "editor.action.insertLineAfter"
   },
   {
      "key": "shift+down",
      "command": "-cursorColumnSelectDown",
      "when": "editorColumnSelection && textInputFocus"
   },
   {
      "key": "ctrl+shift+backspace",
      "command": "-search.searchEditor.action.deleteFileResults",
      "when": "inSearchEditor"
   },
   {
      "key": "shift+escape",
      "command": "-closeParameterHints",
      "when": "editorFocus && parameterHintsVisible"
   },
   {
      "key": "shift+space",
      "command": "editor.action.triggerParameterHints",
      "when": "editorHasSignatureHelpProvider && editorTextFocus && !suggestWidgetVisible && !parameterHintsVisible"
   },
   {
      "key": "ctrl+shift+space",
      "command": "-editor.action.triggerParameterHints",
      "when": "editorHasSignatureHelpProvider && editorTextFocus"
   },
   {
      "key": "tab",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "ctrl+shift+u",
      "command": "git.pushForce"
   },
   {
      "key": "ctrl+shift+space",
      "command": "hideSuggestWidget",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "tab",
      "command": "list.select",
      "when": "listFocus && !inputFocus"
   },
   {
      "key": "tab",
      "command": "breadcrumbs.selectFocused",
      "when": "breadcrumbsActive && breadcrumbsVisible"
   },
   {
      "key": "shift+alt+h",
      "command": "workbench.action.terminal.runActiveFile",
      "when": "editorLangId != 'python'"
   },
   {
      "key": "ctrl+shift+y",
      "command": "workbench.action.addRootFolder"
   },
   {
      "key": "ctrl+shift+[",
      "command": "-notebook.fold",
      "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
   },
   {
      "key": "ctrl+shift+[",
      "command": "-editor.fold",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "ctrl+shift+r",
      "command": "-editor.action.refactor",
      "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
   },
   {
      "key": "ctrl+shift+j",
      "command": "editor.action.refactor"
   },
   {
      "key": "shift+alt+y",
      "command": "workbench.action.reloadWindow"
   },
   {
      "key": "ctrl+alt+y",
      "command": "workbench.action.removeRootFolder"
   },
   {
      "key": "shift+insert",
      "command": "filesExplorer.paste",
      "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
   },
   {
      "key": "ctrl+shift+v",
      "command": "-notebook.cell.pasteAbove",
      "when": "notebookEditorFocused && !inputFocus"
   },
   {
      "key": "ctrl+shift+v",
      "command": "-workbench.action.terminal.paste",
      "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
   },
   {
      "key": "ctrl+; ctrl+p",
      "command": "workbench.action.pinEditor",
      "when": "!activeEditorIsPinned"
   },
   {
      "key": "ctrl+k shift+enter",
      "command": "-workbench.action.pinEditor",
      "when": "!activeEditorIsPinned"
   },
   {
      "key": "ctrl+; ctrl+p",
      "command": "workbench.action.unpinEditor",
      "when": "activeEditorIsPinned"
   },
   {
      "key": "ctrl+k shift+enter",
      "command": "-workbench.action.unpinEditor",
      "when": "activeEditorIsPinned"
   },
   {
      "key": "escape",
      "command": "workbench.action.terminal.kill",
      "when": "terminalHasBeenCreated && terminalFocus"
   },
   {
      "key": "ctrl+space",
      "command": "selectNextSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+oem_1 ctrl+l",
      "command": "-testing.debugLastRun"
   },
   {
      "key": "f9",
      "command": "workbench.action.debug.selectandstart"
   },
   {
      "key": "f10",
      "command": "-jupyter.runByLineNext",
      "when": "jupyter.notebookeditor.runByLineInProgress"
   },
   {
      "key": "f10",
      "command": "-jupyter.runByLine",
      "when": "!jupyter.notebookeditor.debuggingInProgress && !jupyter.notebookeditor.runByLineInProgress && notebookKernelCount > 0"
   },
   {
      "key": "alt+left",
      "command": "editor.action.moveCarretLeftAction",
      "when": "editorTextFocus && !findWidgetVisible && !replaceActive"
   },
   {
      "key": "alt+right",
      "command": "editor.action.moveCarretRightAction",
      "when": "editorTextFocus && !findWidgetVisible && !replaceActive"
   },
   {
      "key": "ctrl+up",
      "command": "-selectPrevSuggestion",
      "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+alt+e",
      "command": "ahk++.compile"
   },
   {
      "key": "shift+alt+w",
      "command": "workbench.action.closeActiveEditor"
   },
   {
      "key": "ctrl+w",
      "command": "-workbench.action.closeActiveEditor"
   },
   {
      "key": "ctrl+k ctrl+0",
      "command": "-editor.foldAll",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "ctrl+k ctrl+j",
      "command": "-editor.unfoldAll",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "ctrl+space",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
   },
   {
      "key": "ctrl+space",
      "command": "editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
   },
   {
      "key": "ctrl+i",
      "command": "-editor.action.triggerSuggest",
      "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
   },
   {
      "key": "shift+space",
      "command": "toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+space",
      "command": "hideSuggestWidget",
      "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetMultipleSuggestions"
   },
   {
      "key": "shift+escape",
      "command": "-hideSuggestWidget",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "alt+down",
      "command": "-showNextParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
   },
   {
      "key": "alt+up",
      "command": "-showPrevParameterHint",
      "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
   },
   {
      "key": "shift+space",
      "command": "closeParameterHints",
      "when": "editorFocus && parameterHintsVisible"
   },
   {
      "key": "ctrl+shift+l",
      "command": "workbench.files.action.collapseExplorerFolders",
      "when": "!editorFocus"
   },
   {
      "key": "ctrl+l",
      "command": "editor.toggleFold",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "ctrl+k ctrl+l",
      "command": "-editor.toggleFold",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "ctrl+shift+enter",
      "command": "hideSuggestWidget",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "alt+f5",
      "command": "-workbench.action.editor.nextChange",
      "when": "editorTextFocus && !textCompareEditorActive"
   },
   {
      "key": "shift+alt+f5",
      "command": "-workbench.action.editor.previousChange",
      "when": "editorTextFocus && !textCompareEditorActive"
   },
   {
      "key": "ctrl+alt+down",
      "command": "workbench.action.compareEditor.nextChange",
      "when": "textCompareEditorVisible && !findWidgetVisible && !replaceActive "
   },
   {
      "key": "alt+f5",
      "command": "-workbench.action.compareEditor.nextChange",
      "when": "textCompareEditorVisible"
   },
   {
      "key": "ctrl+alt+up",
      "command": "workbench.action.compareEditor.previousChange",
      "when": "textCompareEditorVisible && !findWidgetVisible && !replaceActive  "
   },
   {
      "key": "shift+alt+f5",
      "command": "-workbench.action.compareEditor.previousChange",
      "when": "textCompareEditorVisible"
   },
   {
      "key": "ctrl+shift+l",
      "command": "editor.foldAll",
      "when": "editorFocus"
   },
   {
      "key": "ctrl+alt+l",
      "command": "editor.unfoldAll",
      "when": "editorFocus"
   },
   {
      "key": "ctrl+i",
      "command": "-toggleSuggestionDetails",
      "when": "suggestWidgetVisible && textInputFocus"
   },
   {
      "key": "ctrl+; ctrl+;",
      "command": "keybindings.editor.focusKeybindings",
      "when": "inKeybindings && !keybindingFocus"
   },
   {
      "key": "ctrl+down",
      "command": "-keybindings.editor.focusKeybindings",
      "when": "inKeybindings && inKeybindingsSearch"
   },
   {
      "key": "win+pagedown",
      "command": "editor.toggleFold",
      "when": "editorTextFocus && foldingEnabled"
   },
   {
      "key": "win+delete",
      "command": "workbench.action.closeActiveEditor"
   },
   {
      "key": "ctrl+alt+d",
      "command": "editor.action.revealDefinition"
   },
   {
      "key": "ctrl+shift+enter",
      "command": "editor.action.replaceOne",
      "when": "editorFocus && findWidgetVisible"
   },
   {
      "key": "ctrl+shift+1",
      "command": "-editor.action.replaceOne",
      "when": "editorFocus && findWidgetVisible"
   },
   {
      "key": "ctrl+shift+enter",
      "command": "search.action.replace",
      "when": "matchFocus && replaceActive && searchViewletVisible"
   },
   {
      "key": "ctrl+shift+1",
      "command": "-search.action.replace",
      "when": "matchFocus && replaceActive && searchViewletVisible"
   },
   {
      "key": "ctrl+alt+u",
      "command": "git.openChange"
   },
   {
      "key": "ctrl+shift+\\",
      "command": "workbench.action.saveWorkspaceAs"
   },
   {
      "key": "ctrl+alt+\\",
      "command": "workbench.action.openWorkspace"
   },
   {
      "key": "shift+alt+\\",
      "command": "workbench.action.files.openFolder",
      "when": "openFolderWorkspaceSupport"
   },
   {
      "key": "ctrl+k ctrl+o",
      "command": "-workbench.action.files.openFolder",
      "when": "openFolderWorkspaceSupport"
   },
   {
      "key": "ctrl+v",
      "command": "pasteAndIndent.action"
   },
   {
      "key": "ctrl+w",
      "command": "workbench.action.closeActiveEditor"
   },
   {
      "key": "ctrl+shift+pageup",
      "command": "cursorUndo"
   },
   {
      "key": "ctrl+\\",
      "command": "git.revertSelectedRanges",
      "when": "isInDiffEditor"
   },
   {
      "key": "ctrl+k ctrl+r",
      "command": "-git.revertSelectedRanges",
      "when": "isInDiffEditor"
   },
   {
      "key": "ctrl+o",
      "command": "-workbench.action.files.openFile",
      "when": "true"
   },
   {
      "key": "ctrl+o",
      "command": "-workbench.action.files.openFolderViaWorkspace",
      "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
   },
   {
      "key": "ctrl+o",
      "command": "-workbench.action.files.openFileFolder",
      "when": "isMacNative && openFolderWorkspaceSupport"
   },
   {
      "key": "ctrl+o",
      "command": "-workbench.action.files.openLocalFile",
      "when": "remoteFileDialogVisible"
   },
   {
      "key": "win+pageup",
      "command": "yo1dog.cursor-align.alignCursors",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+a",
      "command": "-yo1dog.cursor-align.alignCursors",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+shift+pagedown",
      "command": "cursorRedo"
   },
   { 
     "key": "ctrl+insert",          
     "command": "copy-word.copy",
     "when": "editorTextFocus"      
   },
   { 
     "key": "ctrl+c",
     "command": "copy-word.copy",
     "when": "editorTextFocus"      
   },
   {
     "key": "ctrl+x",          
     "command": "copy-word.cut",
     "when": "editorTextFocus" 
   },
   {
      "key": "ctrl+shift+down",
      "command": "smartmulticursor.insertCursorBelow",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+alt+down",
      "command": "-smartmulticursor.insertCursorBelow",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+shift+up",
      "command": "smartmulticursor.insertCursorAbove",
      "when": "editorTextFocus"
   },
   {
      "key": "shift+alt+up",
      "command": "-smartmulticursor.insertCursorAbove",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+shift+up",
      "command": "-cursorUpSelect",
      "when": "textInputFocus"
   },
   {
      "key": "ctrl+shift+down",
      "command": "-cursorDownSelect",
      "when": "textInputFocus"
   },
   {
      "key": "alt+win+pagedown",
      "command": "yo1dog.cursor-trim.rTrimCursor",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+.",
      "command": "-yo1dog.cursor-trim.rTrimCursor",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+j",
      "command": "findJump.activate"
   },
   {
      "key": "ctrl+d",
      "command": "editor.action.addSelectionToNextFindMatch",
      "when": "editorFocus"
   },
   {
      "key": "alt+win+pageup",
      "command": "yo1dog.cursor-trim.lTrimCursor",
      "when": "editorTextFocus"
   },
   {
      "key": "alt+,",
      "command": "-yo1dog.cursor-trim.lTrimCursor",
      "when": "editorTextFocus"
   },
   {
      "key": "ctrl+shift+backspace",
      "command": "deleteInsideWord"
   },
   {
      "key": "alt+delete",
      "command": "deleteInsideWord"
   },
   {
      "key": "ctrl+m",
      "command": "-editor.action.toggleTabFocusMode"
   },
   {
      "key": "ctrl+s",
      "command": "editor.action.addSelectionToPreviousFindMatch"
   },
   {
      "key": "ctrl+alt+insert",
      "command": "expandLineSelection",
      "when": "textInputFocus"
   },
   {
      "key": "ctrl+l",
      "command": "-expandLineSelection",
      "when": "textInputFocus"
   },
   {
      "key": "ctrl+n",
      "command": "workbench.action.files.newUntitledFile"
   },
   {
      "key": "ctrl+n",
      "command": "-workbench.action.files.newUntitledFile"
   },
   {
      "key": "ctrl+alt+n",
      "command": "workbench.action.files.openFile"
   },
   {
      "key": "shift+alt+s",
      "command": "workbench.action.files.save"
   },
   {
      "key": "ctrl+s",
      "command": "-workbench.action.files.save"
   },
]